version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: stock-premium-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: stock_premium
      MYSQL_USER: stock_user
      MYSQL_PASSWORD: stock123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - stock-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: stock-premium-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stock-network

  # 应用服务
  app:
    build: .
    image: stock-premium-system:jdk17-1.0.0
    container_name: stock-premium-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      DB_USERNAME: stock_user
      DB_PASSWORD: stock123456
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - stock-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: stock-premium-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - stock-network

volumes:
  mysql_data:
  redis_data:

networks:
  stock-network:
    driver: bridge